<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="../styles/style.css">
  <title>CRUD de Produtos</title>
</head>
<body>
  <div class="navbar">
    <h1 class="logo">Market!</h1>
    </form>
 
  </div>
  

  
    <div>
      <form action="/" method="POST" class="productForm">
        <input name="name" type="text" class="nameInput" placeholder="nome">
        <input name="price" type="text" class="priceInput" placeholder="preço">
        <input name="quantity" type="text" class="quantityInput" placeholder="quantidade">
        <input name="image" type="text" class="imgInput" placeholder="image">
        <button class="adicionar" type="submit">Adicionar</button>
      </form>
    </div>



    <ul class="items">
      <div style="display:none" id="change-form" class="change-form">
      <form action="/<%= product._id %>">
        <p placeholder="NovoNome">Novo nome</p>
        <input type="text" id="newName" placeholder="Nome" name="name">
        <p placeholder="NovoNome">Novo preço</p>
        <input type="text" id="newPrice" placeholder="Preço" name="price">
        <p placeholder="NovoNome">Nova quantidade</p>
        <input type="text" id="newQuantity" placeholder="Quantidade" name="quantity"><br>
        <input type="submit" id="update-btn">
      </form>
      </div>

    <% product.forEach((product) => { %>
      <li class="item">
      <img class="image" src="<%= product.image %>" />
      <br>
        <h4 class="item-name"><%= product.name %></h4>
        <p class="item-price">Preço: <%= product.price %>$</p>
        <p class="item-quantity">Quantidade:<%=product.quantity%></p>
        <div class="buttons">
          <button onclick="showEditForm('<%= product._id %>')" class="put">Atualizar</button>
          <button onclick="handleDelete('<%= product._id %>')" class="delete">Excluir</button>
        </div>
        
      </li>
    <% }); %>
  </ul>

  <script>
    let currentProductId; // To store the current productId
  
    const handleDelete = async (productId) => {
      try {
        const response = await fetch(`/${productId}`, {
          method: "DELETE"
        });
  
        if (!response.ok) {
          throw new Error('Failed to delete');
        }
        
        window.location.href = "/home";
      } catch (error) {
        console.error('Error deleting:', error);
      }
    };
  
    const showEditForm = async (productId) => {
      currentProductId = productId; // Store the current productId
      document.getElementById('change-form').style.display = 'block';
    };
  
    const submit = document.querySelector('#update-btn');
    submit.addEventListener('click', async (event) => {
      event.preventDefault(); // Prevent default form submission
  
      const newName = document.querySelector('#newName').value;
      const newPrice = document.querySelector('#newPrice').value;
      const newQuantity = document.querySelector('#newQuantity').value;
  
      try {
        const response = await fetch(`/${currentProductId}`, {
          method: "PUT",
          body: JSON.stringify({ name: newName, price: newPrice, quantity: newQuantity }),
          headers: {
            'Content-Type': 'application/json'
          },
        });
  
        if (!response.ok) {
          throw new Error('Failed to update');
        }
        
        // Handle successful update if needed
        // For example, you might redirect or refresh the page:
        window.location.href = "/home";
      } catch (error) {
        console.error('Error updating:', error);
      }
    });
  </script>

</body>
</html>